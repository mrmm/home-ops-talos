apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: "app-set-bootstrap"
  namespace: argo-system
spec:
  goTemplate: true
  generators:
    - git:
        repoURL: "https://github.com/mrmm/home-ops-talos.git"
        revision: main
        files:
          - path: "kubernetes/apps/**/config.json"
  template:
    metadata:
      name: "{{ index .path.segments 2 }}-{{ index .path.segments 3 }}"
    spec:
      project: "kubernetes"
      destination:
        name: "in-cluster"
        namespace: "{{ index .path.segments 2 }}"
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        syncOptions:
        - CreateNamespace=true
        - ServerSideApply=true
  templatePatch: |
    spec:
      syncPolicy:
        automated:
          allowEmpty: {{ or .config.allowEmpty true }}
          prune:      {{ or .config.prune      true }}
          selfHeal:   {{ or .config.selfHeal   true }}
        syncOptions:
        - CreateNamespace=true
        - ServerSideApply=true
      sources:
        # 1) Git sources for your repo
        - repoURL: "https://github.com/mrmm/home-ops-talos.git"
          targetRevision: main
          ref: repo
        - repoURL: "https://github.com/mrmm/home-ops-talos.git"
          path: "{{ .path.path }}"
          targetRevision: main

        # 2) Helm chart sources, one entry per item in .helm.charts
        {{- range .helm.charts }}
        - repoURL:       "{{ .repoURL }}"
          chart:         "{{ .chart }}"
          targetRevision: "{{ .targetRevision }}"
          helm:
            releaseName: "{{ index $.path.segments 3 }}"
            # Compute valuesFiles: use provided list or default to ["values.yaml"]
            {{- $vals := or .valuesFiles (slice "values.yaml") }}
            {{- if gt (len $vals) 0 }}
            valueFiles:
              {{- range $vals }}
              - $repo/{{ $.path.path }}/{{ . }}
              {{- end }}
            {{- end }}
        {{- end }}
---
